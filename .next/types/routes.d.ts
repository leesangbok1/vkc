// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/questions" | "/questions/[id]"
type AppRouteHandlerRoutes = "/api/answers" | "/api/answers/[id]" | "/api/answers/[id]/accept" | "/api/answers/[id]/comments" | "/api/answers/[id]/helpful" | "/api/answers/[id]/vote" | "/api/answers/[id]/vote/status" | "/api/auth/profile" | "/api/auth/social" | "/api/categories" | "/api/experts/match" | "/api/health" | "/api/notifications" | "/api/notifications/[id]" | "/api/notifications/mark-all-read" | "/api/notifications/unread-count" | "/api/questions" | "/api/questions/[id]" | "/api/questions/[id]/answers" | "/api/questions/[id]/comments" | "/api/questions/[id]/vote" | "/api/questions/[id]/vote/status" | "/api/search" | "/api/stats" | "/auth/callback"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/api/answers": {}
  "/api/answers/[id]": { "id": string; }
  "/api/answers/[id]/accept": { "id": string; }
  "/api/answers/[id]/comments": { "id": string; }
  "/api/answers/[id]/helpful": { "id": string; }
  "/api/answers/[id]/vote": { "id": string; }
  "/api/answers/[id]/vote/status": { "id": string; }
  "/api/auth/profile": {}
  "/api/auth/social": {}
  "/api/categories": {}
  "/api/experts/match": {}
  "/api/health": {}
  "/api/notifications": {}
  "/api/notifications/[id]": { "id": string; }
  "/api/notifications/mark-all-read": {}
  "/api/notifications/unread-count": {}
  "/api/questions": {}
  "/api/questions/[id]": { "id": string; }
  "/api/questions/[id]/answers": { "id": string; }
  "/api/questions/[id]/comments": { "id": string; }
  "/api/questions/[id]/vote": { "id": string; }
  "/api/questions/[id]/vote/status": { "id": string; }
  "/api/search": {}
  "/api/stats": {}
  "/auth/callback": {}
  "/questions": {}
  "/questions/[id]": { "id": string; }
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
